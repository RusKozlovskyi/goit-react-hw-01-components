{"version":3,"sources":["components/Profile/profile.module.css","components/Statistics/statistics.module.css","components/FriendList/friends.module.css","components/TransactionHistory/transactionHistory.module.css","components/Profile/profile.js","components/Statistics/statistics.js","components/FriendList/friendList.js","components/TransactionHistory/transactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","Statistics","title","statistics","stat_list","map","item","style","backgroundColor","Math","floor","random","percentage","id","FriendList","friends","friend_list","friend","isOnline","statusOnline","statusOffline","width","TransactionHistory","items","class","transaction_history","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f251f61a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__dTEaf\",\"description\":\"profile_description__1F8Ox\",\"avatar\":\"profile_avatar__2HgMK\",\"name\":\"profile_name__2HIOH\",\"tag\":\"profile_tag__3BOCq\",\"location\":\"profile_location__1ApkN\",\"stats\":\"profile_stats__3qB9N\",\"label\":\"profile_label__2Q6n3\",\"quantity\":\"profile_quantity__3yBe2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistics_statistics__3TDM7\",\"title\":\"statistics_title__3QG2Y\",\"stat_list\":\"statistics_stat_list__2Srn5\",\"item\":\"statistics_item__1BHBy\",\"label\":\"statistics_label__WZvql\",\"percentage\":\"statistics_percentage__1rJNY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"friends_item__1P9qs\",\"statusOnline\":\"friends_statusOnline__2XWwW\",\"statusOffline\":\"friends_statusOffline__1-j-z\",\"avatar\":\"friends_avatar__26LqJ\",\"name\":\"friends_name__2du6w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"transactionHistory_transaction_history__29d13\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './profile.module.css';\n\n\nconst Profile = ({name, tag, location, avatar, stats}) => {\n    return (\n<div className={styles.profile}>\n  <div className={styles.description}>\n    <img\n      src={avatar}\n      alt=\"User img\"\n      className={styles.avatar}\n    />\n    <p className={styles.name}>{name}</p>\n    <p className={styles.tag}>@{tag}</p>\n    <p className={styles.location}>{location}</p>\n  </div>\n\n  <ul className={styles.stats}>\n    <li>\n      <span className={styles.label}>Followers</span>\n      <span className={styles.quantity}>{stats.followers}</span>\n    </li>\n    <li>\n      <span className={styles.label}>Views</span>\n      <span className={styles.quantity}>{stats.views}</span>\n    </li>\n    <li>\n      <span className={styles.label}>Likes</span>\n      <span className={styles.quantity}>{stats.likes}</span>\n    </li>\n  </ul>\n</div>\n  )\n}\n\nProfile.propTypes = {\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n        followers: PropTypes.number.isRequired,\n        views: PropTypes.number.isRequired,\n        likes: PropTypes.number.isRequired,\n    })\n};\n\nexport default Profile;","import React from 'react'\nimport PropTypes from 'prop-types';\nimport styles from './statistics.module.css'\n\n\n\nconst Statistics = ({ title, stats }) => {\n    function randomColor() {\n        return `rgb(\n    ${Math.floor(Math.random() * 256)},\n    ${Math.floor(Math.random() * 256)}, \n    ${Math.floor(Math.random() * 256)})\n    `;\n    }\n    return (\n        <section className={styles.statistics}>\n            <h2 className={styles.title}>{title}</h2>\n            <ul className={styles.stat_list} >\n                {stats.map(item => (\n                    <li className={styles.item} key={item.id} style={{ backgroundColor: randomColor() }}> \n                    <span className={styles.label}>{item.label}</span>\n                    <span className={styles.percentage}>{item.percentage}%</span>\n                </li>\n                ))}\n            </ul>\n        </section>\n    )\n}       \n\nStatistics.propTypes = {\n    title: PropTypes.string.isRequired,\n    stats: PropTypes.arrayOf(\n        PropTypes.shape ({\n       id: PropTypes.string.isRequired,\n       lable: PropTypes.string.isRequired,\n       percentage: PropTypes.number.isRequired,\n        }).isRequired,\n    )\n};\n\nexport default Statistics;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './friends.module.css';\n\nconst FriendList = ({ friends }) => {\n    return (\n        <ul className={styles.friend_list}>\n            {friends.map(friend => (\n                < li className={styles.item}  key={friend.id}>\n                    <span\n          className={\n            friend.isOnline ? styles.statusOnline : styles.statusOffline\n          }\n        ></span>\n                    <img className={styles.avatar} src={friend.avatar} alt=\"\" width=\"48\" />\n                    <p className={styles.name}>{friend.name}</p>\n                </li>\n            ) )}\n        </ul>\n)\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './transactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => (\n  <table class={styles.transaction_history}>\n    <thead>\n      <tr>\n        <th>Type</th>\n        <th>Amount</th>\n        <th>Currency</th>\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(item => (\n        <tr key={item.id}>\n          <td>{item.type}</td>\n          <td>{item.amount}</td>\n          <td>{item.currency}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  itemss: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;","import React from 'react'\n\nimport user from './Profile/user.json'\nimport Profile from './Profile/profile'\nimport statisticalData from './Statistics/statistical-data.json';\nimport Statistics from './Statistics/statistics'\nimport friends from './FriendList/friends.json'\nimport FriendList from './FriendList/friendList'\nimport transactions from './TransactionHistory/transactions.json'\nimport TransactionHistory from './TransactionHistory/transactionHistory'\n\nconst App = () => {\n    return (\n  <>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n        />\n        <Statistics title=\"Upload stats\" stats={statisticalData} />;\n        <FriendList friends={friends} />,\n        <TransactionHistory items={transactions} />;\n      </>\n    )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}